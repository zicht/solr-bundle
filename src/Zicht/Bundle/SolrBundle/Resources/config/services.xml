<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="zicht_solr.manager" class="Zicht\Bundle\SolrBundle\Service\SolrManager">
            <argument type="service" id="zicht_solr.client"/>
            <argument type="service" id="zicht_solr.mapper.document_metadata_factory"/>
            <argument type="service" id="zicht_solr.object_storage"/>
        </service>

        <service id="zicht_solr.client" class="Zicht\Bundle\SolrBundle\Service\SolrClient">
            <argument type="service" id="zicht_solr.http.client" />
            <argument type="service" id="debug.stopwatch" on-invalid="null" />
        </service>

        <service id="zicht_solr.data_collector" class="Zicht\Bundle\SolrBundle\DataCollector\SolrDataCollector" public="false">
            <tag name="data_collector" template="@ZichtSolr/DataCollector/data_collector.html.twig" id="zicht_solr.data_collector" />
        </service>

        <service id="zicht_solr.mapper.document_metadata_factory" class="Zicht\Bundle\SolrBundle\Mapping\DocumentMapperMetadataFactory" public="false">
            <argument/>
            <argument/>
            <argument type="service" id="annotations.reader"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="zicht_solr.default_document_id_generator" class="Zicht\Bundle\SolrBundle\Mapping\IdGeneratorDefault" public="false">
            <argument type="service" id="zicht_solr.mapper.document_metadata_factory"/>
            <tag name="zicht_solr.document.id_generator"/>
        </service>

        <service id="zicht_solr.object_storage" class="Zicht\Bundle\SolrBundle\Service\ObjectStorage" public="false" />

        <service id="zicht_solr.event_listener.cache_warmer" class="Zicht\Bundle\SolrBundle\EventListener\CacheWarmerListener">
            <argument type="service" id="zicht_solr.mapper.document_metadata_factory"/>
            <tag name="kernel.cache_warmer" />
        </service>

        <service id="zicht_solr.event_listener.loadclassmetadata" class="Zicht\Bundle\SolrBundle\EventListener\LoadClassMetadataListener">
            <argument type="service" id="zicht_solr.mapper.document_metadata_factory"/>
            <tag name="doctrine.event_listener" event="loadClassMetadata"/>
        </service>

        <service id="zicht_solr.event_listener.response_exception" class="Zicht\Bundle\SolrBundle\EventListener\ResponseExceptionListener">
            <tag name="kernel.event_listener" event="kernel.exception" priority="255" />
        </service>

    </services>
</container>